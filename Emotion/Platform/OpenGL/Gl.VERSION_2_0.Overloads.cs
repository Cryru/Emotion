#region Using

using System;
using Khronos;

#endregion

namespace OpenGL
{
    public partial class Gl
    {
        /// <summary>
        /// Replaces the source code in a shader object
        /// </summary>
        /// <param name="shader">
        /// Specifies the handle of the shader object whose source code is to be replaced.
        /// </param>
        /// <param name="string">
        /// Specifies an array of pointers to strings containing the source code to be loaded into the shader.
        /// </param>
        /// <remarks>
        /// </remarks>
        /// <exception cref="InvalidOperationException">
        /// Gl.INVALID_VALUE is generated if <paramref name="shader" /> is not a value generated by OpenGL.
        /// </exception>
        /// <exception cref="InvalidOperationException">
        /// Gl.INVALID_OPERATION is generated if <paramref name="shader" /> is not a shader object.
        /// </exception>
        /// <seealso cref="Gl.CompileShader" />
        /// <seealso cref="Gl.CreateShader" />
        /// <seealso cref="Gl.DeleteShader" />
        [RequiredByFeature("GL_VERSION_2_0")]
        [RequiredByFeature("GL_ES_VERSION_2_0", Api = "gles2")]
        [RequiredByFeature("GL_ARB_shader_objects")]
        public static void ShaderSource(uint shader, string[] @string)
        {
            var length = new int[@string.Length];

            for (var i = 0; i < @string.Length; i++)
            {
                length[i] = @string[i] != null ? @string[i].Length : 0;
            }

            ShaderSource(shader, @string, length);
        }
    }
}
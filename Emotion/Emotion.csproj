<Project ToolsVersion="Current">
    <PropertyGroup>
        <OutputType>Library</OutputType>
        <TargetFramework>net9.0</TargetFramework>
        <ApplicationIcon />
        <StartupObject />
        <FileUpgradeFlags>
        </FileUpgradeFlags>
        <UpgradeBackupLocation>
        </UpgradeBackupLocation>
        <OldToolsVersion>2.0</OldToolsVersion>
        <NuspecFile>./Emotion.nuspec</NuspecFile>
        <GenerateDocumentationFile>true</GenerateDocumentationFile>
        <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
        <NoWarn>1701;1702;1591;1734;IDE0001;IDE0002;IDE0049</NoWarn>
        <Configurations>Debug;Release;Autobuild</Configurations>
        <Platforms>Win64;Win64NoDepend;Win32;Linux64;MacOS64;Android;Web;Other</Platforms>
        <EmitCompilerGeneratedFiles>true</EmitCompilerGeneratedFiles>
        
         <!--You should use Emotion's deserialization anyway, but just in case you use the built in one. -->
        <JsonSerializerIsReflectionEnabledByDefault>false</JsonSerializerIsReflectionEnabledByDefault>
    </PropertyGroup>
    
    <!-- Conditional SDK -->
    <Import Project="Sdk.props" Sdk="Microsoft.NET.Sdk" Condition="'$(Platform)'!='Web'" />
    <Import Project="Sdk.targets" Sdk="Microsoft.NET.Sdk" Condition="'$(Platform)'!='Web'" />
    
    <Import Project="Sdk.props" Sdk="Microsoft.NET.Sdk.BlazorWebAssembly" Condition="'$(Platform)'=='Web'" />
    <Import Project="Sdk.targets" Sdk="Microsoft.NET.Sdk.BlazorWebAssembly" Condition="'$(Platform)'=='Web'" />
    
    <ItemGroup>
        <ProjectReference Include="..\Emotion.SourceGeneration\Emotion.SourceGeneration.csproj" OutputItemType="Analyzer" ReferenceOutputAssembly="false" />
    </ItemGroup>

    <PropertyGroup Condition="'$(Configuration)'=='Debug'">
        <DebugType>full</DebugType>
        <DebugSymbols>true</DebugSymbols>
        <DocumentationFile />
        <Optimize>false</Optimize>
    </PropertyGroup>
    <PropertyGroup Condition="'$(Configuration)'=='Release'">
        <Optimize>True</Optimize>
    </PropertyGroup>

    <!-- Windows 64 bit -->
     <PropertyGroup Condition="'$(Platform)'=='Win64'">
        <DefineConstants>$(DefineConstants);WIN64</DefineConstants>
        <PlatformTarget>x64</PlatformTarget>
        <BuiltInComInteropSupport>true</BuiltInComInteropSupport>
    </PropertyGroup>
    <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win64'">
        <DefineConstants>$(DefineConstants);MESA;ANGLE;MORE_IMAGE_TYPES;CSHARP_SCRIPTING</DefineConstants>
        <IsTrimmable>True</IsTrimmable>
        <IsAotCompatible>True</IsAotCompatible>
    </PropertyGroup>
    <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win64NoDepend'">
        <DefineConstants>$(DefineConstants)</DefineConstants>
        <PlatformTarget>x64</PlatformTarget>
        <IsTrimmable>True</IsTrimmable>
        <IsAotCompatible>True</IsAotCompatible>
    </PropertyGroup>
    <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win64'">
        <DefineConstants>$(DefineConstants);ANGLE;MESA</DefineConstants>
        <PlatformTarget>x64</PlatformTarget>
        <IsTrimmable>True</IsTrimmable>
        <IsAotCompatible>True</IsAotCompatible>
    </PropertyGroup>
    <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win64NoDepend'">
        <DefineConstants>$(DefineConstants)</DefineConstants>
        <PlatformTarget>x64</PlatformTarget>
        <IsTrimmable>True</IsTrimmable>
        <IsAotCompatible>True</IsAotCompatible>
    </PropertyGroup>

    <!-- Windows 32 bit -->
    <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Win32'">
        <DefineConstants>$(DefineConstants);MESA;ANGLE;MORE_IMAGE_TYPES;CSHARP_SCRIPTING;WIN32;OpenAL</DefineConstants>
        <PlatformTarget>x86</PlatformTarget>
        <IsTrimmable>True</IsTrimmable>
        <IsAotCompatible>True</IsAotCompatible>
    </PropertyGroup>
    <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|Win32'">
        <DefineConstants>$(DefineConstants);ANGLE;MESA;WIN32;OpenAL</DefineConstants>
        <PlatformTarget>x86</PlatformTarget>
        <IsTrimmable>True</IsTrimmable>
        <IsAotCompatible>True</IsAotCompatible>
    </PropertyGroup>

    <!-- Linux 64 bit -->
    <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Linux64'">
        <DefineConstants>$(DefineConstants);MORE_IMAGE_TYPES;OpenAL;GLFW;LINUX</DefineConstants>
        <PlatformTarget>x64</PlatformTarget>
        <IsTrimmable>True</IsTrimmable>
        <IsAotCompatible>True</IsAotCompatible>
    </PropertyGroup>
    <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|Linux64'">
        <DefineConstants>$(DefineConstants);OpenAL;GLFW;LINUX</DefineConstants>
        <PlatformTarget>x64</PlatformTarget>
        <IsTrimmable>True</IsTrimmable>
        <IsAotCompatible>True</IsAotCompatible>
    </PropertyGroup>

    <!-- MacOS 64 bit -->
    <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|MacOS64'">
        <DefineConstants>$(DefineConstants);MORE_IMAGE_TYPES;OpenAL;GLFW;MACOS</DefineConstants>
        <PlatformTarget>x64</PlatformTarget>
        <IsTrimmable>True</IsTrimmable>
        <IsAotCompatible>True</IsAotCompatible>
    </PropertyGroup>
    <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|MacOS64'">
        <DefineConstants>$(DefineConstants);OpenAL;GLFW;MACOS</DefineConstants>
        <PlatformTarget>x64</PlatformTarget>
        <IsTrimmable>True</IsTrimmable>
        <IsAotCompatible>True</IsAotCompatible>
    </PropertyGroup>

    <!-- Android -->
    <PropertyGroup Condition="'$(Platform)'=='Android'">
        <DefineConstants>$(DefineConstants);ANDROID</DefineConstants>
        <PlatformTarget>AnyCPU</PlatformTarget>
        <TargetFramework>net9.0-android</TargetFramework>
        <SupportedOSPlatformVersion>28.0</SupportedOSPlatformVersion>
        <Debugger>Xamarin</Debugger>

        <DebugType>embedded</DebugType>
        <EmbedAssembliesIntoApk>True</EmbedAssembliesIntoApk>
    </PropertyGroup>
            
    <!-- Generic AnyCPU, no config, idk if this makes any sense to have -->
    <PropertyGroup Condition="'$(Platform)'=='Other'">
        <PlatformTarget>AnyCPU</PlatformTarget>
    </PropertyGroup>
    
    <!-- Web -->
    <PropertyGroup Condition="'$(Platform)'=='Web'">
        <DefineConstants>$(DefineConstants);WEB</DefineConstants>
        <PlatformTarget>AnyCPU</PlatformTarget>
        <StaticWebAssetBasePath>Emotion</StaticWebAssetBasePath>
        <StartupObject />
    </PropertyGroup>
    <ItemGroup Condition="'$(Platform)'=='Web'">
        <PackageReference Include="Microsoft.AspNetCore.Components.WebAssembly" Version="9.0.3" />
        <PackageReference Include="Microsoft.AspNetCore.Components.WebAssembly.DevServer" Version="9.0.3" PrivateAssets="all" />
    </ItemGroup>
    <ItemGroup Condition="'$(Platform)'!='Web'">
        <Compile Remove="Platform\Implementation\Web\**\*.cs" />
    </ItemGroup>
    <PropertyGroup Condition="'$(Platform)'!='Web'">
        <EnableDefaultRazorComponentItems>false</EnableDefaultRazorComponentItems>
    </PropertyGroup>

    <!-- Github Autobuild -->
    <PropertyGroup Condition="'$(Configuration)'=='Autobuild'">
        <DefineConstants>$(DefineConstants);AUTOBUILD;CSHARP_SCRIPTING;MESA</DefineConstants>
        <Optimize>True</Optimize>
    </PropertyGroup>
    
    <!-- todo -->
    <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Android'">
      <IsTrimmable>False</IsTrimmable>
      <IsAotCompatible>False</IsAotCompatible>
    </PropertyGroup>
    <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|Web'">
      <IsTrimmable>True</IsTrimmable>
      <IsAotCompatible>True</IsAotCompatible>
    </PropertyGroup>
    <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|Android'">
      <IsTrimmable>False</IsTrimmable>
      <IsAotCompatible>False</IsAotCompatible>
      <DebugType>embedded</DebugType>
    </PropertyGroup>
    <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|Web'">
      <IsTrimmable>True</IsTrimmable>
      <IsAotCompatible>True</IsAotCompatible>
    </PropertyGroup>
    <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Autobuild|Win64'">
      <IsTrimmable>True</IsTrimmable>
      <IsAotCompatible>True</IsAotCompatible>
    </PropertyGroup>
    <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Autobuild|Win64NoDepend'">
      <IsTrimmable>True</IsTrimmable>
      <IsAotCompatible>True</IsAotCompatible>
    </PropertyGroup>
    <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Autobuild|Win32'">
      <IsTrimmable>True</IsTrimmable>
      <IsAotCompatible>True</IsAotCompatible>
    </PropertyGroup>
    <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Autobuild|Linux64'">
      <IsTrimmable>True</IsTrimmable>
      <IsAotCompatible>True</IsAotCompatible>
    </PropertyGroup>
    <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Autobuild|MacOS64'">
      <IsTrimmable>True</IsTrimmable>
      <IsAotCompatible>True</IsAotCompatible>
    </PropertyGroup>
    <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Autobuild|Android'">
      <IsTrimmable>False</IsTrimmable>
      <IsAotCompatible>False</IsAotCompatible>
      <DebugType>embedded</DebugType>
    </PropertyGroup>
    
    <!-- Libraries Code Include -->
    <ItemGroup Condition="!$(DefineConstants.Contains('OpenAL'))">
        <Compile Remove="Platform\Implementation\OpenAL\**\*.cs" />
    </ItemGroup>
    <ItemGroup Condition="!$(DefineConstants.Contains('GLFW'))">
        <Compile Remove="Platform\Implementation\GlfwImplementation\**\*.cs" />
    </ItemGroup>
    <ItemGroup Condition="!$(DefineConstants.Contains('ANGLE'))">
        <Compile Remove="Platform\Implementation\EglAngle\**\*.cs" />
    </ItemGroup>
    <ItemGroup Condition="!$(DefineConstants.Contains('ANDROID'))">
        <Compile Remove="Platform\Implementation\Android\**\*.cs" />
    </ItemGroup>
    <ItemGroup Condition="!$(DefineConstants.Contains('MORE_MESH_TYPES'))">
        <Compile Remove="Standard\Assimp\**\*.cs" />
    </ItemGroup>
    <ItemGroup Condition="!$(DefineConstants.Contains('CSHARP_SCRIPTING'))">
        <Compile Remove="Game\Scripting\**\*.cs" />
    </ItemGroup>
    
    <ItemGroup>
        <!-- All engine assets are embedded -->
        <EmbeddedResource Include="Assets\**\*.*">
            <CopyToOutputDirectory>Never</CopyToOutputDirectory>
        </EmbeddedResource>
    </ItemGroup>
    
     <!-- Android -->
    <ItemGroup Condition="'$(Platform)'=='Android'">
         <!-- Workaround for a stupid bug -->
        <AndroidNativeLibrary Remove="AssetsNativeLibs\GLFW\linux\glfw.so" />
        <AndroidNativeLibrary Remove="AssetsNativeLibs\OpenAL\linux\openal32.so" />
        <AndroidNativeLibrary Remove="AssetsNativeLibs\OpenAL\linux\libsndio.so.6.1" />
    </ItemGroup>
    
    <!-- ONE Temp -->
    <ItemGroup>
      <Compile Remove="Game\World2D\SceneControl\World2DBaseScene.cs" />
      <Compile Remove="Game\World3D\SceneControl\World3DBaseScene.cs" />
      <Compile Remove="Game\World\SceneControl\WorldBaseScene.cs" />
      <Compile Remove="IO\MeshAssetTypes\EmotionMeshAsset.cs" />
      <Compile Remove="Testing\Templates\EmptyTestSceneTemplate.cs" />
      <Compile Remove="WIPUpdates\NewUIUpdate\UIUpdateDemoScene.cs" />
      <Compile Remove="WIPUpdates\TextUpdate\TextUpdateDemoScene.cs" />
    </ItemGroup>

    <!-- Libraries Binaries -->
    <ItemGroup>
        <None Update="AssetsNativeLibs\ANGLE\win64\libEGL.dll" Condition="$(DefineConstants.Contains('ANGLE')) And $(DefineConstants.Contains('WIN64'))">
            <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
        </None>
        <None Update="AssetsNativeLibs\ANGLE\win64\libGLESv2.dll" Condition="$(DefineConstants.Contains('ANGLE')) And $(DefineConstants.Contains('WIN64'))">
            <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
        </None>
    </ItemGroup>
    <ItemGroup>
        <None Update="AssetsNativeLibs\GLFW\linux\glfw.so" Condition="$(DefineConstants.Contains('GLFW')) And $(DefineConstants.Contains('LINUX'))">
            <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
        </None>
        <None Update="AssetsNativeLibs\GLFW\macos\glfw.dylib" Condition="$(DefineConstants.Contains('GLFW')) And $(DefineConstants.Contains('MACOS'))">
            <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
        </None>
        <None Update="AssetsNativeLibs\GLFW\win32\glfw.dll" Condition="$(DefineConstants.Contains('GLFW')) And $(DefineConstants.Contains('WIN32'))">
            <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
        </None>
        <None Update="AssetsNativeLibs\GLFW\win64\glfw.dll" Condition="$(DefineConstants.Contains('GLFW')) And $(DefineConstants.Contains('WIN64'))">
            <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
        </None>
    </ItemGroup>
    <ItemGroup>
        <None Update="AssetsNativeLibs\Mesa\win32\opengl32.dll" Condition="$(DefineConstants.Contains('MESA')) And $(DefineConstants.Contains('WIN32'))">
            <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
        </None>
        <None Update="AssetsNativeLibs\Mesa\win64\opengl32.dll" Condition="$(DefineConstants.Contains('MESA')) And $(DefineConstants.Contains('WIN64'))">
            <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
        </None>
    </ItemGroup>
    <ItemGroup>
        <None Update="AssetsNativeLibs\OpenAL\linux\libsndio.so.6.1" Condition="$(DefineConstants.Contains('OpenAL')) And $(DefineConstants.Contains('LINUX'))">
            <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
        </None>
        <None Update="AssetsNativeLibs\OpenAL\linux\openal32.so" Condition="$(DefineConstants.Contains('OpenAL')) And $(DefineConstants.Contains('LINUX'))">
            <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
        </None>
        <None Update="AssetsNativeLibs\OpenAL\macos\openal32.dylib" Condition="$(DefineConstants.Contains('OpenAL')) And $(DefineConstants.Contains('MACOS'))">
            <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
        </None>
        <None Update="AssetsNativeLibs\OpenAL\win64\openal32.dll" Condition="$(DefineConstants.Contains('OpenAL')) And $(DefineConstants.Contains('WIN64'))">
            <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
        </None>
        <None Update="AssetsNativeLibs\OpenAL\win32\openal32.dll" Condition="$(DefineConstants.Contains('OpenAL')) And $(DefineConstants.Contains('WIN32'))">
            <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
        </None>
    </ItemGroup>
    <ItemGroup>
        <None Update="AssetsNativeLibs\Superluminal\PerformanceAPI.dll" Condition="$(DefineConstants.Contains('Superluminal'))">
            <CopyToOutputDirectory>PreserveNewest</CopyToOutputDirectory>
        </None>
    </ItemGroup>
    <ItemGroup>
        <PackageReference Include="Silk.NET.Assimp" Version="2.22.0" Condition="$(DefineConstants.Contains('MORE_MESH_TYPES'))" />
        <PackageReference Include="SixLabors.ImageSharp" Version="3.1.7" Condition="$(DefineConstants.Contains('MORE_IMAGE_TYPES'))" />
        <PackageReference Include="Microsoft.CodeAnalysis.CSharp.Scripting" Version="4.12.0" Condition="$(DefineConstants.Contains('CSHARP_SCRIPTING'))" />
        <PackageReference Include="System.Text.Json" Version="9.0.3" />
    </ItemGroup>
    <ItemGroup>
      <None Include="Game\World2D\SceneControl\World2DBaseScene.cs" />
      <None Include="Game\World3D\SceneControl\World3DBaseScene.cs" />
      <None Include="Game\World\SceneControl\WorldBaseScene.cs" />
      <None Include="IO\MeshAssetTypes\EmotionMeshAsset.cs" />
      <None Include="Testing\Templates\EmptyTestSceneTemplate.cs" />
      <None Include="WIPUpdates\NewUIUpdate\UIUpdateDemoScene.cs" />
      <None Include="WIPUpdates\TextUpdate\TextUpdateDemoScene.cs" />
    </ItemGroup>
</Project>

IO
	- "Relative to" support for things like the shaders which reference other assets.
DataBuffer.CreateMapper
	- Currently a CPU copy of the data is required to ensure minimal data transfer. Can this be worked around?
GL
	- Investigate why the VertexArrayObject binding cache doesn't work. Maybe VertexArrayBinding isn't the right value?
Rendering
	- Add tests for state changes
	- Add tests for various batch stuff
	- Uniform blocks (UBO) for syncing shaders. Also some kind of CPU based system to reduce so many unnecessary syncing
	- Does color have to be uploaded for every sprite's vertex? Most of the time they won't differ per sprite, and most of the time it is white.
Standard.Image
	- Implement ByteWriter and use it to encode the images.
	- JPEG Support
	- Add tests for image encoding
	- Would be nice to have to provide some sort of PixelFormat to Encode, Decode. Currently only BGRA is passed around.
Logging
	- Filtering
	- Shaking off dependencies - make own logger.
	- Hooking up a network loggers for certain levels (errors) and sources (engine, game)
Standard.Text
	- Improve the CFF dictionary parsing with a class with annotations instead of the dictionary hell happening there.
	- WOFF table parsing (and whatever else is needed for it to be supported)
	- Kern table and kerning
	- FDSelect array CFF subr. (No font found which does this.)
	- LTag parsing (couldn't find such font)
	- Cff fonts without a CMap (couldn't find such font)
	- GSub table
	- GPos table
	- FVar table
	- Meta table
	- Long Term: Implement the FreeType rasterizer.
	- RenderGlyph, "e" variable resizing is not really needed.
	- Add tests for MeasureString and fix broken stuff there.
	- Test out the subsampling of the stb rasterizer.
	- Implement the custom renderer you've been thinking of, wink
Emotion.Test
	- Derivation checks shouldn't straight out check if the components are equal, but rather compare the difference to an epsilon as some drivers round colors differently
	- The current max derivation % is 400 instead of 100
	- Test functions which are run at the start and end of a class.
	- Taking screenshots of the game currently requires the intermediary buffer to be turned on, as there is no place for the test framework to hook before swap buffers.
Documentation
	- Finish the documentation :D
Game Logic
	- UI with scaling and some kind of event capturing/focus system
	- Add RichText tests
Platform
	- Mac
	- Linux
	- Android
	- Web
Meta
	- Nuget Package
	- Autobuild nuget package, with version patching, and commit hash patching
Input
	- Controller Support (Wherever possible)
Emotion.Game
	- Bound box for the tile map - used to calculate only visible tiles and map only them.
Tools
	- FileExplorer extension matching per asset type (don't show those who don't match)
	- Modals are reported to not center on 4k screens.